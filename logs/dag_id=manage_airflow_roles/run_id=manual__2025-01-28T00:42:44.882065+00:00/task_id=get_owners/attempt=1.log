[2025-01-28T00:42:57.117+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-01-28T00:42:57.168+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: manage_airflow_roles.get_owners manual__2025-01-28T00:42:44.882065+00:00 [queued]>
[2025-01-28T00:42:57.193+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: manage_airflow_roles.get_owners manual__2025-01-28T00:42:44.882065+00:00 [queued]>
[2025-01-28T00:42:57.194+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 1
[2025-01-28T00:42:57.233+0000] {taskinstance.py:2889} INFO - Executing <Task(_PythonDecoratedOperator): get_owners> on 2025-01-28 00:42:44.882065+00:00
[2025-01-28T00:42:57.247+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=155) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2025-01-28T00:42:57.251+0000] {standard_task_runner.py:72} INFO - Started process 157 to run task
[2025-01-28T00:42:57.254+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'manage_***_roles', 'get_owners', 'manual__2025-01-28T00:42:44.882065+00:00', '--job-id', '27', '--raw', '--subdir', 'DAGS_FOLDER/dag.py', '--cfg-path', '/tmp/tmppp7piy7f']
[2025-01-28T00:42:57.257+0000] {standard_task_runner.py:105} INFO - Job 27: Subtask get_owners
[2025-01-28T00:42:57.456+0000] {task_command.py:467} INFO - Running <TaskInstance: manage_airflow_roles.get_owners manual__2025-01-28T00:42:44.882065+00:00 [running]> on host 3014556d0580
[2025-01-28T00:42:57.617+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='data-team' AIRFLOW_CTX_DAG_ID='manage_***_roles' AIRFLOW_CTX_TASK_ID='get_owners' AIRFLOW_CTX_EXECUTION_DATE='2025-01-28T00:42:44.882065+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-01-28T00:42:44.882065+00:00'
[2025-01-28T00:42:57.619+0000] {logging_mixin.py:190} INFO - Task instance is in running state
[2025-01-28T00:42:57.620+0000] {logging_mixin.py:190} INFO -  Previous state of the Task instance: queued
[2025-01-28T00:42:57.621+0000] {logging_mixin.py:190} INFO - Current task name:get_owners state:running start_date:2025-01-28 00:42:57.170260+00:00
[2025-01-28T00:42:57.621+0000] {logging_mixin.py:190} INFO - Dag name:manage_***_roles and current dag run status:running
[2025-01-28T00:42:57.622+0000] {taskinstance.py:731} INFO - ::endgroup::
[2025-01-28T00:42:57.623+0000] {dagbag.py:588} INFO - Filling up the DagBag from /opt/***/dags
[2025-01-28T00:42:57.895+0000] {python.py:240} INFO - Done. Returned value was: {'hello_world_dag': <DAG: hello_world_dag>, 'manage_airflow_roles': <DAG: manage_airflow_roles>, 'example_local_kubernetes_executor': <DAG: example_local_kubernetes_executor>, 'tutorial': <DAG: tutorial>, 'example_bash_decorator': <DAG: example_bash_decorator>, 'example_python_operator': <DAG: example_python_operator>, 'example_setup_teardown': <DAG: example_setup_teardown>, 'dataset_alias_example_alias_consumer_with_no_taskflow': <DAG: dataset_alias_example_alias_consumer_with_no_taskflow>, 'dataset_s3_bucket_consumer_with_no_taskflow': <DAG: dataset_s3_bucket_consumer_with_no_taskflow>, 'dataset_alias_example_alias_producer_with_no_taskflow': <DAG: dataset_alias_example_alias_producer_with_no_taskflow>, 'dataset_s3_bucket_producer_with_no_taskflow': <DAG: dataset_s3_bucket_producer_with_no_taskflow>, 'example_passing_params_via_test_command': <DAG: example_passing_params_via_test_command>, 'example_branch_labels': <DAG: example_branch_labels>, 'example_workday_timetable': <DAG: example_workday_timetable>, 'example_xcom': <DAG: example_xcom>, 'example_setup_teardown_taskflow': <DAG: example_setup_teardown_taskflow>, 'tutorial_taskflow_templates': <DAG: tutorial_taskflow_templates>, 'tutorial_taskflow_api_virtualenv': <DAG: tutorial_taskflow_api_virtualenv>, 'read_dataset_event': <DAG: read_dataset_event>, 'read_dataset_event_from_classic': <DAG: read_dataset_event_from_classic>, 'example_sla_dag': <DAG: example_sla_dag>, 'example_task_group': <DAG: example_task_group>, 'example_trigger_target_dag': <DAG: example_trigger_target_dag>, 'example_kubernetes_executor': <DAG: example_kubernetes_executor>, 'latest_only_with_trigger': <DAG: latest_only_with_trigger>, 'example_branch_python_operator_decorator': <DAG: example_branch_python_operator_decorator>, 'example_external_task_marker_parent': <DAG: example_external_task_marker_parent>, 'example_external_task_marker_child': <DAG: example_external_task_marker_child>, 'example_dag_decorator': <DAG: example_dag_decorator>, 'example_skip_dag': <DAG: example_skip_dag>, 'example_dynamic_task_mapping_with_no_taskflow_operators': <DAG: example_dynamic_task_mapping_with_no_taskflow_operators>, 'example_weekday_branch_operator': <DAG: example_weekday_branch_operator>, 'tutorial_objectstorage': <DAG: tutorial_objectstorage>, 'example_sensors': <DAG: example_sensors>, 'example_dynamic_task_mapping': <DAG: example_dynamic_task_mapping>, 'example_display_name': <DAG: example_display_name>, 'example_python_decorator': <DAG: example_python_decorator>, 'example_complex': <DAG: example_complex>, 'example_sensor_decorator': <DAG: example_sensor_decorator>, 'example_params_trigger_ui': <DAG: example_params_trigger_ui>, 'example_bash_operator': <DAG: example_bash_operator>, 'latest_only': <DAG: latest_only>, 'example_short_circuit_decorator': <DAG: example_short_circuit_decorator>, 'dataset_with_extra_by_context': <DAG: dataset_with_extra_by_context>, 'dataset_with_extra_by_yield': <DAG: dataset_with_extra_by_yield>, 'dataset_with_extra_from_classic_operator': <DAG: dataset_with_extra_from_classic_operator>, 'example_task_group_decorator': <DAG: example_task_group_decorator>, 'consume_1_or_2_with_dataset_expressions': <DAG: consume_1_or_2_with_dataset_expressions>, 'dataset_produces_1': <DAG: dataset_produces_1>, 'dataset_produces_2': <DAG: dataset_produces_2>, 'conditional_dataset_and_time_based_timetable': <DAG: conditional_dataset_and_time_based_timetable>, 'dataset_consumes_1': <DAG: dataset_consumes_1>, 'dataset_consumes_unknown_never_scheduled': <DAG: dataset_consumes_unknown_never_scheduled>, 'consume_1_and_2_with_dataset_expressions': <DAG: consume_1_and_2_with_dataset_expressions>, 'dataset_consumes_1_never_scheduled': <DAG: dataset_consumes_1_never_scheduled>, 'consume_1_or_both_2_and_3_with_dataset_expressions': <DAG: consume_1_or_both_2_and_3_with_dataset_expressions>, 'dataset_consumes_1_and_2': <DAG: dataset_consumes_1_and_2>, 'tutorial_taskflow_api': <DAG: tutorial_taskflow_api>, 'example_branch_dop_operator_v3': <DAG: example_branch_dop_operator_v3>, 'example_time_delta_sensor_async': <DAG: example_time_delta_sensor_async>, 'example_nested_branch_dag': <DAG: example_nested_branch_dag>, 'tutorial_dag': <DAG: tutorial_dag>, 'example_short_circuit_operator': <DAG: example_short_circuit_operator>, 'example_branch_operator': <DAG: example_branch_operator>, 'example_xcom_args': <DAG: example_xcom_args>, 'example_xcom_args_with_operators': <DAG: example_xcom_args_with_operators>, 'example_subdag_operator.section-1': <DAG: example_subdag_operator.section-1>, 'example_subdag_operator.section-2': <DAG: example_subdag_operator.section-2>, 'example_subdag_operator': <DAG: example_subdag_operator>, 'dataset_alias_example_alias_consumer': <DAG: dataset_alias_example_alias_consumer>, 'dataset_s3_bucket_producer': <DAG: dataset_s3_bucket_producer>, 'dataset_alias_example_alias_producer': <DAG: dataset_alias_example_alias_producer>, 'dataset_s3_bucket_consumer': <DAG: dataset_s3_bucket_consumer>, 'example_trigger_controller_dag': <DAG: example_trigger_controller_dag>, 'example_params_ui_tutorial': <DAG: example_params_ui_tutorial>, 'example_branch_datetime_operator_2': <DAG: example_branch_datetime_operator_2>, 'example_branch_datetime_operator': <DAG: example_branch_datetime_operator>, 'example_branch_datetime_operator_3': <DAG: example_branch_datetime_operator_3>}
[2025-01-28T00:42:57.901+0000] {xcom.py:690} ERROR - Object of type DAG is not JSON serializable. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config or make sure to decorate your object with attr.
[2025-01-28T00:42:57.903+0000] {taskinstance.py:3311} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 92, in default
    return serialize(o)
           ^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py", line 190, in serialize
    raise TypeError(f"cannot serialize object of type {cls}")
TypeError: cannot serialize object of type <class '***.models.dag.DAG'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 789, in _execute_task
    task_instance.xcom_push(key=XCOM_RETURN_KEY, value=xcom_value, session=session_or_null)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3639, in xcom_push
    XCom.set(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 166, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 249, in set
    value = cls.serialize_value(
            ^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 688, in serialize_value
    return json.dumps(value, cls=XComEncoder).encode("UTF-8")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 105, in encode
    return super().encode(o)
           ^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 94, in default
    return super().default(o)
           ^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DAG is not JSON serializable
[2025-01-28T00:42:57.913+0000] {logging_mixin.py:190} INFO - Task instance in failure state
[2025-01-28T00:42:57.913+0000] {logging_mixin.py:190} INFO - Task start:2025-01-28 00:42:57.170260+00:00 end:2025-01-28 00:42:57.912871+00:00 duration:0.742611
[2025-01-28T00:42:57.913+0000] {logging_mixin.py:190} INFO - Task:<Task(_PythonDecoratedOperator): get_owners> dag:<DAG: manage_***_roles> dagrun:<DagRun manage_***_roles @ 2025-01-28 00:42:44.882065+00:00: manual__2025-01-28T00:42:44.882065+00:00, state:running, queued_at: 2025-01-28 00:42:44.926445+00:00. externally triggered: True>
[2025-01-28T00:42:57.913+0000] {logging_mixin.py:190} INFO - Failure caused by Object of type DAG is not JSON serializable
[2025-01-28T00:42:57.914+0000] {taskinstance.py:1225} INFO - Marking task as FAILED. dag_id=manage_***_roles, task_id=get_owners, run_id=manual__2025-01-28T00:42:44.882065+00:00, execution_date=20250128T004244, start_date=20250128T004257, end_date=20250128T004257
[2025-01-28T00:42:57.929+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2025-01-28T00:42:57.929+0000] {standard_task_runner.py:124} ERROR - Failed to execute job 27 for task get_owners (Object of type DAG is not JSON serializable; 157)
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 92, in default
    return serialize(o)
           ^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/serialization/serde.py", line 190, in serialize
    raise TypeError(f"cannot serialize object of type {cls}")
TypeError: cannot serialize object of type <class '***.models.dag.DAG'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/task/task_runner/standard_task_runner.py", line 117, in _start_by_fork
    ret = args.func(args, dag=self.dag)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/cli_config.py", line 49, in command
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/cli.py", line 116, in wrapper
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 483, in task_run
    task_return_code = _run_task_by_selected_method(args, _dag, ti)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 256, in _run_task_by_selected_method
    return _run_raw_task(args, ti)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/cli/commands/task_command.py", line 341, in _run_raw_task
    return ti._run_raw_task(
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3005, in _run_raw_task
    return _run_raw_task(
           ^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 273, in _run_raw_task
    TaskInstance._execute_task_with_callbacks(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3159, in _execute_task_with_callbacks
    result = self._execute_task(context, task_orig)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3183, in _execute_task
    return _execute_task(self, context, task_orig)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 789, in _execute_task
    task_instance.xcom_push(key=XCOM_RETURN_KEY, value=xcom_value, session=session_or_null)
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 3639, in xcom_push
    XCom.set(
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 166, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 249, in set
    value = cls.serialize_value(
            ^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/xcom.py", line 688, in serialize_value
    return json.dumps(value, cls=XComEncoder).encode("UTF-8")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 105, in encode
    return super().encode(o)
           ^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/json.py", line 94, in default
    return super().default(o)
           ^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DAG is not JSON serializable
[2025-01-28T00:42:57.951+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 1
[2025-01-28T00:42:58.146+0000] {taskinstance.py:3895} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-01-28T00:42:58.148+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
